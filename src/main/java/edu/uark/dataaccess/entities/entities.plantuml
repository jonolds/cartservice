@startuml

title __ENTITIES's Class Diagram__\n

  package  {
    package edu.uark {
      package edu.uark.dataaccess.entities {
        abstract class BaseEntity {
            # id : UUID
            # isNew : boolean
            # isDirty : boolean
            # toUpdateFieldNames : LinkedList<String>
            {static} - INSERT_PREAMBLE : String
            {static} - INSERT_VALUES_PREAMBLE : String
            {static} - UPDATE_PREAMBLE : String
            {static} - DELETE_COMMAND_FORMAT : String
            # repository : BaseRepositoryInterface<T>
            + getId()
            + setId()
            # getIsNew()
            # setIsNew()
            # getIsDirty()
            # setIsDirty()
            # propertyChanged()
            + hasChanged()
            {abstract} # fillFromRecord()
            {abstract} # fillRecord()
            + load()
            # onIdSet()
            + onLoadComplete()
            + save()
            + save()
            - insertNewRecord()
            - buildInsertStatement()
            - updateRecord()
            - buildUpdateStatement()
            + delete()
            + delete()
            # ConnectAndRun()
            # stringHasChanged()
            # stringHasChangedIgnoreCase()
            # uuidHasChanged()
            # localDateTimeHasChanged()
            # byteArrayHasChanged()
            + hashCode()
            + equals()
            # BaseEntity()
            # BaseEntity()
        }
      }
    }
  }
  

  package  {
    package edu.uark {
      package edu.uark.dataaccess.entities {
        class BaseFieldNames {
            {static} + ID : String
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
